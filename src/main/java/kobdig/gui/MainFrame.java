/*
 * MainFrame.java
 *
 * Created on January 13, 2007, 4:46 PM
 */

package kobdig.gui;

import kobdig.agent.Agent;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.*;

/**
 * This is the main window of the KOBDIG graphical user interface.
 * The window can hold text, typically log messages.
 *
 * @author  Andrea G. B. Tettamanzi
 */
public class MainFrame
        extends JFrame
        implements java.awt.event.ActionListener,
            java.awt.event.WindowListener
{

    /** File chooser dialog. */
    private JFileChooser chooser;
	
    /** File filter for KOBDIG agent program files. */
    private AgentFileFilter agentFileFilter = new AgentFileFilter(); 
    
    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        chooser = new JFileChooser();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new JScrollPane();
        text = new JTextArea();
        menuBar = new JMenuBar();
        fileMenu = new JMenu();
        open = new JMenuItem();
        exit = new JMenuItem();
        infoMenu = new JMenu();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(this);

        text.setColumns(20);
        text.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12));
        text.setRows(5);
        scrollPane.setViewportView(text);

        fileMenu.setText("File");

        open.setText("Open...");
        open.addActionListener(this);
        fileMenu.add(open);

        exit.setText("Exit");
        exit.addActionListener(this);
        fileMenu.add(exit);

        menuBar.add(fileMenu);

        infoMenu.setText("Info");
        menuBar.add(infoMenu);

        setJMenuBar(menuBar);
        
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );
        pack();
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == exit) {
            MainFrame.this.exitActionPerformed(evt);
        }
        else if (evt.getSource() == open) {
            MainFrame.this.openAgent(evt);
        }
    }

    public void windowActivated(java.awt.event.WindowEvent evt) {
    }

    public void windowClosed(java.awt.event.WindowEvent evt) {
    }

    public void windowClosing(java.awt.event.WindowEvent evt) {
        if (evt.getSource() == MainFrame.this) {
            MainFrame.this.formWindowClosing(evt);
        }
    }

    public void windowDeactivated(java.awt.event.WindowEvent evt) {
    }

    public void windowDeiconified(java.awt.event.WindowEvent evt) {
    }

    public void windowIconified(java.awt.event.WindowEvent evt) {
    }

    public void windowOpened(java.awt.event.WindowEvent evt) {
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        formWindowClosing(null);
        dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.out.println("Bye.");
    }//GEN-LAST:event_formWindowClosing

private void openAgent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openAgent
    chooser.setFileFilter(agentFileFilter);
    int returnVal = chooser.showOpenDialog(this);
    if(returnVal!=JFileChooser.APPROVE_OPTION)
        return;
    File file = chooser.getSelectedFile();
    try
    {
        Agent agent = new Agent(new FileInputStream(file));
        AgentView agentView = new AgentView(agent);
        agentView.setVisible(true);
    }
    catch (FileNotFoundException ex)
    {
        ex.printStackTrace();
    }
    catch (IOException ex)
    {
        ex.printStackTrace();
    }
}//GEN-LAST:event_openAgent

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected JMenuItem exit;
    protected JMenu fileMenu;
    protected JMenu infoMenu;
    protected JMenuBar menuBar;
    protected JMenuItem open;
    protected JScrollPane scrollPane;
    protected JTextArea text;
    // End of variables declaration//GEN-END:variables
    
}
